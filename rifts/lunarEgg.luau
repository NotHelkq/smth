local httpRequest =
    (syn and syn.request) or
    (http and http.request) or
    (http_request) or
    (fluxus and fluxus.request) or
    (request)

if not httpRequest then
    warn("‚ö†Ô∏è No supported HTTP request method found!")
    return
end

local player = game.Players.LocalPlayer
local httpService = game:GetService("HttpService")

local islandName = " Lunar Egg"
local rift = workspace.Rendered.Rifts:FindFirstChild("lunar-egg")
local luck = rift.Display.SurfaceGui.Icon.Luck.Text
local timer = rift.Display.SurfaceGui.Timer.Text
local title = luck .. islandName

local webhooklink = "Nothing"
if luck == "x5" then
    webhooklink = getgenv().Config.x5RiftWebhookLink
elseif luck == "x10" then
    webhooklink = getgenv().Config.x10RiftWebhookLink
elseif luck == "x25" then 
    webhooklink = getgenv().Config.x25RiftWebhookLink
end

local lTitle = "0"
if luck == "x5" then
    lTitle = "1364579377496588328"
elseif luck == "x10" then
    lTitle = "1364579347490406421"
elseif luck == "x25" then
    lTitle = "1364579313793372170"
end

local function sendWebhook()
    local pos = rift.EggPlatformSpawn.WorldPivot.Position
    local rPos = Vector3.new(
        math.floor(pos.X + 0.5),
        math.floor(pos.Y + 0.5),
        math.floor(pos.Z + 0.5)
    )
    local desc = string.format("‚ùì** Island Position : ** X = %d, Y = %d, Z = %d ‚ùì\n", rPos.X, rPos.Y, rPos.Z)

    local time = os.time()
    desc = desc .. "üïõ **Time Found : ** <t:" .. time .. ":f> üïõ \n"

    desc = desc .. "üïõ ** Despawn : in ** " .. timer .. " üïõ"

    local data = {
        ["content"] = "<@&1364569157248618596> | <@&" .. lTitle .. ">",
        ["embeds"] = {{
            ["title"] = "üçÄ " .. title .. " üçÄ",
            ["description"] = desc,
            ["color"] = 16711680
        }}
    }

    httpRequest({
        Url = webhooklink,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = httpService:JSONEncode(data)
    })
end

sendWebhook()
